# Generated by Django 3.1.14 on 2022-11-17 07:57

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('branch_code', models.CharField(db_index=True, max_length=256, unique=True)),
                ('branch_name', models.CharField(blank=True, max_length=256, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Branches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommandRun',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('command_title', models.CharField(choices=[('periodic_invoices', 'Periodic invoices'), ('due_date', 'Due date'), ('failed_jobs', 'Failed jobs'), ('renew_branches', 'Renew branches'), ('import_destinations', 'Import destinations'), ('import_tariffs', 'Import tariffs'), ('init_cgrates', 'Initialize CGRateS'), ('import_credits', 'Import credits from Excel'), ('import_branches', 'Import branches'), ('renew_subscription_type', "Renew subscription's type"), ('expire_packages', 'Expire packages'), ('integrity_check', 'Integrity check'), ('update_runtime_configs', 'Update runtime configs'), ('check_deallocation', 'Check deallocation'), ('clean_api_requests', 'Clean api requests'), ('check_sessions', 'Check sessions')], default='periodic_invoices', max_length=512, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CreditInvoice',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('status_code', models.CharField(choices=[('ready', 'Ready'), ('pending', 'Pending'), ('success', 'Success'), ('revoke', 'Revoke')], db_index=True, default='ready', max_length=64)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_status_at', models.DateTimeField()),
                ('pay_cool_down', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('tracking_code', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('operation_type', models.CharField(choices=[('increase', 'Increase'), ('decrease', 'Decrease')], db_index=True, default='increase', max_length=64)),
                ('used_for', models.CharField(blank=True, choices=[('invoice', 'Invoice'), ('base_balance_invoice', 'Base balance invoice'), ('package_invoice', 'Package invoice')], default=None, max_length=128, null=True)),
                ('used_for_id', models.UUIDField(blank=True, default=None, null=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('customer_code', models.CharField(db_index=True, max_length=256, unique=True)),
                ('credit', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('prefix', models.CharField(max_length=256, unique=True)),
                ('name', models.CharField(max_length=256)),
                ('country_code', models.CharField(db_index=True, max_length=256)),
                ('code', models.CharField(choices=[('mobile_national', 'Mobile national'), ('landline_national', 'Landline national'), ('mobile_international', 'Mobile International'), ('landline_international', 'Landline International')], db_index=True, max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FailedJob',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('job_title', models.CharField(choices=[('periodic_invoice', 'Periodic invoices'), ('notify_trunk', 'Notify trunk'), ('renew_branch', 'Renew branch'), ('renew_subscription_type', 'Renew subscription type')], max_length=512, null=True)),
                ('service_version', models.CharField(choices=[('v1', 'Version 1')], default='v1', max_length=512, null=True)),
                ('service_name', models.CharField(max_length=512)),
                ('method_name', models.CharField(max_length=512)),
                ('method_args', models.JSONField(blank=True, null=True)),
                ('is_done', models.BooleanField(default=False)),
                ('error_message', models.CharField(max_length=1024)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('operator_code', models.CharField(db_index=True, max_length=256, unique=True)),
                ('inbound_rate', models.DecimalField(decimal_places=2, max_digits=20)),
                ('outbound_rate', models.DecimalField(decimal_places=2, max_digits=20)),
                ('rate_time_type', models.CharField(choices=[('seconds', 'Seconds'), ('minutes', 'Minutes')], default='seconds', max_length=128)),
                ('rate_time', models.IntegerField(default=60, validators=[django.core.validators.MaxValueValidator(60), django.core.validators.MinValueValidator(1)])),
                ('inbound_divide_on_percent', models.IntegerField(default=80, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(1)])),
                ('outbound_divide_on_percent', models.IntegerField(default=80, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('destinations', models.ManyToManyField(blank=True, to='finance.Destination')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('package_code', models.CharField(db_index=True, max_length=256, unique=True)),
                ('package_name', models.CharField(max_length=512)),
                ('package_due', models.CharField(choices=[('1', '1 Day'), ('3', '3 Days'), ('5', '5 Days'), ('7', '7 Days'), ('15', '15 Days'), ('30', '30 Days'), ('45', '45 Days'), ('60', '60 Days'), ('90', '90 Days'), ('120', '120 Days'), ('180', '180 Days'), ('365', '365 Days')], db_index=True, default='1', max_length=64)),
                ('package_discount', models.IntegerField(default=0)),
                ('package_pure_price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('package_price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('package_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=True)),
                ('start_at', models.DateTimeField(default=None, null=True)),
                ('end_at', models.DateTimeField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RuntimeConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('item_key', models.CharField(choices=[('issue_new_interim_hours', 'Issue new interim invoice in hours'), ('invoice_due_dates_period', 'Number of periods for due date in invoices'), ('corporate_state_prefixes', 'Corporate state prefixes'), ('corporate_national_prefixes', 'Corporate national prefixes'), ('discount_static_value', 'Discount static value on invoices'), ('discount_percent_value', 'Discount percent on invoices'), ('deallocation_due', 'Due date for deallocation of subscription'), ('emergency_numbers', 'Emergency numbers'), ('payment_cool_down', 'Payment cool down in minutes'), ('black_list_in_days', 'Black list deallocated numbers in days')], db_index=True, max_length=512, unique=True)),
                ('item_value', models.CharField(max_length=1024)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('country_code', models.CharField(db_index=True, max_length=256, unique=True)),
                ('tax_percent', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('subscription_code', models.CharField(db_index=True, max_length=256, unique=True)),
                ('subscription_type', models.CharField(choices=[('postpaid', 'Postpaid'), ('prepaid', 'Prepaid'), ('unlimited', 'Unlimited')], db_index=True, default='postpaid', max_length=128)),
                ('number', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
                ('auto_pay', models.BooleanField(default=True)),
                ('is_allocated', models.BooleanField(db_index=True, default=True)),
                ('deallocated_at', models.DateTimeField(blank=True, null=True)),
                ('deallocation_cause', models.CharField(blank=True, choices=[('normal', 'Normal'), ('violation', 'Violation')], db_index=True, max_length=128, null=True)),
                ('deallocate_warned', models.BooleanField(db_index=True, default=False)),
                ('latest_paid_at', models.DateTimeField(blank=True, null=True)),
                ('interim_request', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriptions', to='finance.branch')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to='finance.customer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profit',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('inbound_used_percent', models.IntegerField(default=80, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(1)])),
                ('outbound_used_percent', models.IntegerField(default=80, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(1)])),
                ('inbound_usage', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('outbound_usage', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('inbound_cost_first_part', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('inbound_cost_second_part', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('outbound_cost_first_part', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('outbound_cost_second_part', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('status_code', models.CharField(choices=[('pending', 'Pending'), ('received', 'Received'), ('revoked', 'Revoked')], db_index=True, default='pending', max_length=64)),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
                ('updated_status_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profits', to='finance.operator')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('status_code', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed')], db_index=True, default='pending', max_length=64)),
                ('gateway', models.CharField(max_length=512, null=True)),
                ('extra_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_status_at', models.DateTimeField(auto_now_add=True)),
                ('credit_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='finance.creditinvoice')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PackageInvoice',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('status_code', models.CharField(choices=[('ready', 'Ready'), ('pending', 'Pending'), ('success', 'Success'), ('revoke', 'Revoke')], db_index=True, default='ready', max_length=64)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_status_at', models.DateTimeField()),
                ('pay_cool_down', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('tracking_code', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('total_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('expired_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('is_expired', models.BooleanField(default=False)),
                ('auto_renew', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('description', models.TextField(blank=True)),
                ('credit_invoice', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='package_invoice', to='finance.creditinvoice')),
                ('package', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='package_invoices', to='finance.package')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='package_invoices', to='finance.subscription')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('status_code', models.CharField(choices=[('ready', 'Ready'), ('pending', 'Pending'), ('success', 'Success'), ('revoke', 'Revoke')], db_index=True, default='ready', max_length=64)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_status_at', models.DateTimeField()),
                ('pay_cool_down', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('tracking_code', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('period_count', models.IntegerField()),
                ('tax_cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('tax_percent', models.IntegerField()),
                ('discount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=20)),
                ('discount_description', models.CharField(blank=True, default='', max_length=512, null=True)),
                ('debt', models.DecimalField(decimal_places=2, max_digits=20)),
                ('subscription_fee', models.DecimalField(decimal_places=2, max_digits=20)),
                ('landlines_long_distance_usage', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=20)),
                ('landlines_long_distance_cost', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=20)),
                ('landlines_local_usage', models.DecimalField(decimal_places=2, max_digits=20)),
                ('landlines_corporate_cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('landlines_corporate_usage', models.DecimalField(decimal_places=2, max_digits=20)),
                ('landlines_local_cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('mobile_usage', models.DecimalField(decimal_places=2, max_digits=20)),
                ('mobile_cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('international_usage', models.DecimalField(decimal_places=2, max_digits=20)),
                ('international_cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('landlines_long_distance_usage_prepaid', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=20)),
                ('landlines_long_distance_cost_prepaid', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=20)),
                ('landlines_local_usage_prepaid', models.DecimalField(decimal_places=2, max_digits=20)),
                ('landlines_corporate_cost_prepaid', models.DecimalField(decimal_places=2, max_digits=20)),
                ('landlines_corporate_usage_prepaid', models.DecimalField(decimal_places=2, max_digits=20)),
                ('landlines_local_cost_prepaid', models.DecimalField(decimal_places=2, max_digits=20)),
                ('mobile_usage_prepaid', models.DecimalField(decimal_places=2, max_digits=20)),
                ('mobile_cost_prepaid', models.DecimalField(decimal_places=2, max_digits=20)),
                ('international_usage_prepaid', models.DecimalField(decimal_places=2, max_digits=20)),
                ('international_cost_prepaid', models.DecimalField(decimal_places=2, max_digits=20)),
                ('invoice_type_code', models.CharField(choices=[('periodic', 'Periodic'), ('interim', 'Interim')], default='periodic', max_length=64)),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('due_date_notified', models.CharField(choices=[('no_warning', 'No warning'), ('first_warning', 'First warning'), ('second_warning', 'Second warning'), ('third_warning', 'Third warning'), ('fourth_warning', 'Fourth warning')], db_index=True, default='no_warning', max_length=64)),
                ('description', models.TextField(blank=True)),
                ('on_demand', models.BooleanField(default=False)),
                ('credit_invoice', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='invoice', to='finance.creditinvoice')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='finance.subscription')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='creditinvoice',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_invoices', to='finance.customer'),
        ),
        migrations.AddField(
            model_name='branch',
            name='destinations',
            field=models.ManyToManyField(blank=True, to='finance.Destination'),
        ),
        migrations.CreateModel(
            name='BaseBalanceInvoice',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('status_code', models.CharField(choices=[('ready', 'Ready'), ('pending', 'Pending'), ('success', 'Success'), ('revoke', 'Revoke')], db_index=True, default='ready', max_length=64)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_status_at', models.DateTimeField()),
                ('pay_cool_down', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('tracking_code', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('description', models.TextField(blank=True)),
                ('operation_type', models.CharField(choices=[('increase', 'Increase'), ('decrease', 'Decrease')], db_index=True, default='increase', max_length=64)),
                ('credit_invoice', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='base_balance_invoice', to='finance.creditinvoice')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='base_balance_invoices', to='finance.subscription')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('checksum', models.CharField(blank=True, max_length=512, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('file_id', models.CharField(max_length=512, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='attachments', to='finance.payment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
